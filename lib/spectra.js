// Generated by CoffeeScript 1.6.3
(function() {
  (function() {
    var GAMMA, INTENSITY_MAX, wavelengthToRGB;
    GAMMA = function() {
      return 0.8;
    };
    INTENSITY_MAX = function() {
      return 255;
    };
    wavelengthToRGB = function(wavelength) {
      var adjust, blue, factor, green, red, w;
      red = void 0;
      green = void 0;
      blue = void 0;
      factor = void 0;
      adjust = function(color, factor) {
        if (color === 0) {
          return 0;
        } else {
          return Math.round(INTENSITY_MAX() * Math.pow(color * factor, GAMMA()));
        }
      };
      w = Math.round(wavelength);
      if (w >= 380 && w <= 439) {
        red = -(w - 440) / (440 - 380);
        green = 0;
        blue = 1;
      } else if (w >= 440 && w <= 489) {
        red = 0;
        green = (w - 440) / (490 - 440);
        blue = 1;
      } else if (w >= 490 && w <= 509) {
        red = 0;
        green = 1;
        blue = -(w - 510) / (510 - 490);
      } else if (w >= 510 && w <= 579) {
        red = (w - 510) / (580 - 510);
        green = 1;
        blue = 0;
      } else if (w >= 580 && w <= 644) {
        red = 1;
        green = -(w - 645) / (645 - 580);
        blue = 0;
      } else if (w >= 645 && w <= 780) {
        red = 1;
        green = 0;
        blue = 0;
      } else {
        red = 0;
        green = 0;
        blue = 0;
      }
      if (w >= 380 && w <= 419) {
        factor = 0.3 + 0.7 * (w - 380) / (420 - 380);
      } else if (w >= 420 && w <= 700) {
        factor = 1;
      } else if (w >= 701 && w <= 780) {
        factor = 0.3 + 0.7 * (780 - w) / (780 - 700);
      } else {
        factor = 0;
      }
      return {
        r: adjust(red, factor),
        g: adjust(green, factor),
        b: adjust(blue, factor)
      };
    };
    if (typeof module !== "undefined" && module !== null) {
      module.exports.wavelengthToRGB = wavelengthToRGB;
    }
    if (typeof window !== "undefined" && window !== null) {
      window.spectra = {
        wavelengthToRGB: wavelengthToRGB
      };
    }
    if (require && require.register) {
      return require.register('spectra', function(exports, require, module) {
        return exports.wavelengthToRGB = wavelengthToRGB;
      });
    }
  })();

}).call(this);
